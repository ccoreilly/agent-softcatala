import { ComponentPropsWithoutRef, type FC } from "react";
import { MessagePrimitive } from "../primitives";
declare const AssistantMessage: FC;
/**
 * @deprecated Use `AssistantMessage.Content.Props` instead. This will be removed in 0.6.
 */
export type AssistantMessageContentProps = AssistantMessageContent.Props;
declare namespace AssistantMessageContent {
    type Element = HTMLDivElement;
    type Props = MessagePrimitive.Content.Props & ComponentPropsWithoutRef<"div">;
}
declare const AssistantMessageContent: import("react").ForwardRefExoticComponent<MessagePrimitive.Content.Props & Omit<import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLDivElement>, HTMLDivElement>, "ref"> & import("react").RefAttributes<HTMLDivElement>>;
declare const exports: {
    Root: import("react").ForwardRefExoticComponent<Partial<Omit<Omit<Omit<import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLDivElement>, HTMLDivElement>, "ref"> & {
        ref?: ((instance: HTMLDivElement | null) => void | import("react").DO_NOT_USE_OR_YOU_WILL_BE_FIRED_CALLBACK_REF_RETURN_VALUES[keyof import("react").DO_NOT_USE_OR_YOU_WILL_BE_FIRED_CALLBACK_REF_RETURN_VALUES]) | import("react").RefObject<HTMLDivElement> | null | undefined;
    } & {
        asChild?: boolean;
    }, "ref"> & import("react").RefAttributes<HTMLDivElement>, "ref">> & import("react").RefAttributes<HTMLDivElement>>;
    Avatar: FC;
    Content: import("react").ForwardRefExoticComponent<MessagePrimitive.Content.Props & Omit<import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLDivElement>, HTMLDivElement>, "ref"> & import("react").RefAttributes<HTMLDivElement>>;
};
declare const _default: typeof AssistantMessage & typeof exports;
export default _default;
//# sourceMappingURL=assistant-message.d.ts.map