import { ComponentPropsWithoutRef, type FC } from "react";
import { TooltipIconButtonProps } from "./base/tooltip-icon-button";
import { ComposerPrimitive } from "../primitives";
declare const Composer: FC;
declare const ComposerInputStyled: import("react").ForwardRefExoticComponent<Partial<Omit<import("react-textarea-autosize").TextareaAutosizeProps & {
    asChild?: boolean | undefined;
    submitOnEnter?: boolean | undefined;
    cancelOnEscape?: boolean | undefined;
    unstable_focusOnRunStart?: boolean | undefined;
    unstable_focusOnScrollToBottom?: boolean | undefined;
    unstable_focusOnThreadSwitched?: boolean | undefined;
} & import("react").RefAttributes<HTMLTextAreaElement>, "ref">> & import("react").RefAttributes<HTMLTextAreaElement>>;
declare namespace ComposerInput {
    type Element = HTMLTextAreaElement;
    type Props = ComponentPropsWithoutRef<typeof ComposerInputStyled>;
}
/**
 * @deprecated Use `ComposerInput.Props` instead. This will be removed in 0.6.
 */
export type ComposerInputProps = ComposerInput.Props;
declare const ComposerInput: import("react").ForwardRefExoticComponent<Omit<Partial<Omit<import("react-textarea-autosize").TextareaAutosizeProps & {
    asChild?: boolean | undefined;
    submitOnEnter?: boolean | undefined;
    cancelOnEscape?: boolean | undefined;
    unstable_focusOnRunStart?: boolean | undefined;
    unstable_focusOnScrollToBottom?: boolean | undefined;
    unstable_focusOnThreadSwitched?: boolean | undefined;
} & import("react").RefAttributes<HTMLTextAreaElement>, "ref">> & import("react").RefAttributes<HTMLTextAreaElement>, "ref"> & import("react").RefAttributes<HTMLTextAreaElement>>;
declare const exports: {
    Root: import("react").ForwardRefExoticComponent<Partial<Omit<Omit<Omit<import("react").DetailedHTMLProps<import("react").FormHTMLAttributes<HTMLFormElement>, HTMLFormElement>, "ref"> & {
        ref?: ((instance: HTMLFormElement | null) => void | import("react").DO_NOT_USE_OR_YOU_WILL_BE_FIRED_CALLBACK_REF_RETURN_VALUES[keyof import("react").DO_NOT_USE_OR_YOU_WILL_BE_FIRED_CALLBACK_REF_RETURN_VALUES]) | import("react").RefObject<HTMLFormElement> | null | undefined;
    } & {
        asChild?: boolean;
    }, "ref"> & import("react").RefAttributes<HTMLFormElement>, "ref">> & import("react").RefAttributes<HTMLFormElement>>;
    Input: import("react").ForwardRefExoticComponent<Omit<Partial<Omit<import("react-textarea-autosize").TextareaAutosizeProps & {
        asChild?: boolean | undefined;
        submitOnEnter?: boolean | undefined;
        cancelOnEscape?: boolean | undefined;
        unstable_focusOnRunStart?: boolean | undefined;
        unstable_focusOnScrollToBottom?: boolean | undefined;
        unstable_focusOnThreadSwitched?: boolean | undefined;
    } & import("react").RefAttributes<HTMLTextAreaElement>, "ref">> & import("react").RefAttributes<HTMLTextAreaElement>, "ref"> & import("react").RefAttributes<HTMLTextAreaElement>>;
    Action: FC;
    Send: import("react").ForwardRefExoticComponent<Partial<TooltipIconButtonProps> & import("react").RefAttributes<HTMLButtonElement>>;
    Cancel: import("react").ForwardRefExoticComponent<Partial<TooltipIconButtonProps> & import("react").RefAttributes<HTMLButtonElement>>;
    AddAttachment: import("react").ForwardRefExoticComponent<Partial<TooltipIconButtonProps> & import("react").RefAttributes<HTMLButtonElement>>;
    Attachments: FC<Partial<ComposerPrimitive.Attachments.Props>>;
};
declare const _default: typeof Composer & typeof exports;
export default _default;
//# sourceMappingURL=composer.d.ts.map