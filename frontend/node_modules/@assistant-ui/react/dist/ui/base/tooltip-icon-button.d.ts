import { ButtonProps } from "./button";
export type TooltipIconButtonProps = ButtonProps & {
    tooltip: string;
    side?: "top" | "bottom" | "left" | "right";
};
export declare const TooltipIconButton: import("react").ForwardRefExoticComponent<Omit<Omit<import("react").DetailedHTMLProps<import("react").ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>, "ref"> & {
    ref?: ((instance: HTMLButtonElement | null) => void | import("react").DO_NOT_USE_OR_YOU_WILL_BE_FIRED_CALLBACK_REF_RETURN_VALUES[keyof import("react").DO_NOT_USE_OR_YOU_WILL_BE_FIRED_CALLBACK_REF_RETURN_VALUES]) | import("react").RefObject<HTMLButtonElement> | null | undefined;
} & {
    asChild?: boolean;
}, "ref"> & import("class-variance-authority").VariantProps<(props?: ({
    variant?: "default" | "outline" | "ghost" | null | undefined;
    size?: "default" | "icon" | null | undefined;
} & import("class-variance-authority/types").ClassProp) | undefined) => string> & {
    tooltip: string;
    side?: "top" | "bottom" | "left" | "right";
} & import("react").RefAttributes<HTMLButtonElement>>;
//# sourceMappingURL=tooltip-icon-button.d.ts.map