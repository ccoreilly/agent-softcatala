{"version":3,"sources":["../../../src/context/react/index.ts"],"sourcesContent":["export {\n  useAssistantRuntime,\n  useThreadList,\n  useToolUIs,\n  useToolUIsStore,\n\n  /**\n   * @deprecated Use `useAssistantRuntime()` instead. This will be removed in 0.6.0.\n   */\n  useAssistantActions,\n  /**\n   * @deprecated Use `useAssistantRuntime()` instead. This will be removed in 0.6.0.\n   */\n  useAssistantActionsStore,\n  /**\n   * @deprecated Use `useAssistantRuntime()` instead. This will be removed in 0.6.0.\n   */\n  useAssistantRuntimeStore,\n\n  /**\n   * @deprecated You can import the hooks directly, e.g. `import { useAssistantRuntime } from \"@assistant-ui/react\"`. This will be removed in 0.6.0.\n   */\n  type AssistantContextValue,\n  /**\n   * @deprecated You can import the hooks directly, e.g. `import { useAssistantRuntime } from \"@assistant-ui/react\"`. This will be removed in 0.6.0.\n   */\n  useAssistantContext,\n} from \"./AssistantContext\";\n\nexport {\n  useThreadRuntime,\n  useThread,\n  useThreadComposer,\n  useThreadModelConfig,\n\n  /**\n   * @deprecated Use `useThread().messages` instead. This will be removed in 0.6.0.\n   */\n  useThreadMessages,\n\n  /**\n   * @deprecated Use `useThreadRuntime().getState()` instead. This will be removed in 0.6.0.\n   */\n  useThreadStore,\n\n  /**\n   * @deprecated Use `useThreadRuntime().getState().messages` instead. This will be removed in 0.6.0.\n   */\n  useThreadMessagesStore,\n\n  /**\n   * @deprecated Use `useThreadRuntime()` instead. This will be removed in 0.6.0.\n   */\n  useThreadActions,\n\n  /**\n   * @deprecated Use `useThreadRuntime()` instead. This will be removed in 0.6.0.\n   */\n  useThreadActionsStore,\n\n  /**\n   * @deprecated Use `useThreadRuntime()` instead. This will be removed in 0.6.0.\n   */\n  useThreadRuntimeStore,\n  // TODO move out of runtime context after 0.6.0\n  useThreadViewport,\n  // TODO move out of runtime context after 0.6.0\n  useThreadViewportStore,\n\n  /**\n   * @deprecated Use `useThreadRuntime().composer.getState()` instead. This will be removed in 0.6.0.\n   */\n  useThreadComposerStore,\n\n  /**\n   * @deprecated You can import the hooks directly, e.g. `import { useThread } from \"@assistant-ui/react\"`. This will be removed in 0.6.0.\n   */\n  type ThreadContextValue,\n  /**\n   * @deprecated You can import the hooks directly, e.g. `import { useThread } from \"@assistant-ui/react\"`. This will be removed in 0.6.0.\n   */\n  useThreadContext,\n} from \"./ThreadContext\";\nexport {\n  useMessageRuntime,\n  useMessage,\n  useEditComposer,\n  // TODO move out of runtime context after 0.6.0\n  useMessageUtils,\n  // TODO move out of runtime context after 0.6.0\n  useMessageUtilsStore,\n\n  /**\n   * @deprecated Use `useMessageRuntime().getState()` instead. This will be removed in 0.6.0.\n   */\n  useMessageStore,\n\n  /**\n   * @deprecated Use `useMessageRuntime().composer.getState()` instead. This will be removed in 0.6.0.\n   */\n  useEditComposerStore,\n\n  /**\n   * @deprecated You can import the hooks directly, e.g. `import { useMessage } from \"@assistant-ui/react\"`. This will be removed in 0.6.0.\n   */\n  type MessageContextValue,\n  /**\n   * @deprecated You can import the hooks directly, e.g. `import { useMessage } from \"@assistant-ui/react\"`. This will be removed in 0.6.0.\n   */\n  useMessageContext,\n} from \"./MessageContext\";\nexport {\n  useContentPartRuntime,\n  useContentPart,\n\n  /**\n   * @deprecated Use `useContentPartRuntime().getState()` instead. This will be removed in 0.6.0.\n   */\n  useContentPartStore,\n\n  /**\n   * @deprecated You can import the hooks directly, e.g. `import { useContentPart } from \"@assistant-ui/react\"`. This will be removed in 0.6.0.\n   */\n  type ContentPartContextValue,\n  /**\n   * @deprecated You can import the hooks directly, e.g. `import { useContentPart } from \"@assistant-ui/react\"`. This will be removed in 0.6.0.\n   */\n  useContentPartContext,\n} from \"./ContentPartContext\";\nexport {\n  useComposerRuntime,\n  useComposer,\n\n  /**\n   * @deprecated Use `useComposerRuntime().getState()` instead. This will be removed in 0.6.0.\n   */\n  useComposerStore,\n\n  /**\n   * @deprecated You can import the hooks directly, e.g. `import { useComposer } from \"@assistant-ui/react\"`. This will be removed in 0.6.0.\n   */\n  type ComposerContextValue,\n  /**\n   * @deprecated You can import the hooks directly, e.g. `import { useComposer } from \"@assistant-ui/react\"`. This will be removed in 0.6.0.\n   */\n  useComposerContext,\n} from \"./ComposerContext\";\n\nexport {\n  useAttachment,\n  useAttachmentRuntime,\n\n  // TODO decide if we want to export/drop these?\n  // useEditComposerAttachment,\n  // useEditComposerAttachmentRuntime,\n  // useMessageAttachment,\n  // useMessageAttachmentRuntime,\n  // useThreadComposerAttachment,\n  // useThreadComposerAttachmentRuntime,\n} from \"./AttachmentContext\";\n"],"mappings":";AAAA;AAAA,EACE;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EAKA;AAAA,EAIA;AAAA,EAIA;AAAA,EASA;AAAA,OACK;AAEP;AAAA,EACE;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EAKA;AAAA,EAKA;AAAA,EAKA;AAAA,EAKA;AAAA,EAKA;AAAA,EAKA;AAAA,EAEA;AAAA,EAEA;AAAA,EAKA;AAAA,EASA;AAAA,OACK;AACP;AAAA,EACE;AAAA,EACA;AAAA,EACA;AAAA,EAEA;AAAA,EAEA;AAAA,EAKA;AAAA,EAKA;AAAA,EASA;AAAA,OACK;AACP;AAAA,EACE;AAAA,EACA;AAAA,EAKA;AAAA,EASA;AAAA,OACK;AACP;AAAA,EACE;AAAA,EACA;AAAA,EAKA;AAAA,EASA;AAAA,OACK;AAEP;AAAA,EACE;AAAA,EACA;AAAA,OASK;","names":[]}