{"version":3,"sources":["../../src/api/AssistantRuntime.ts"],"sourcesContent":["import { AssistantRuntimeCore } from \"../runtimes/core/AssistantRuntimeCore\";\nimport { NestedSubscriptionSubject } from \"./subscribable/NestedSubscriptionSubject\";\nimport { ModelConfigProvider } from \"../types/ModelConfigTypes\";\nimport {\n  ThreadRuntime,\n  ThreadRuntimeCoreBinding,\n  ThreadRuntimeImpl,\n} from \"./ThreadRuntime\";\nimport { Unsubscribe } from \"../types\";\nimport { ThreadListRuntime, ThreadListRuntimeImpl } from \"./ThreadListRuntime\";\n\nexport type AssistantRuntime = {\n  /**\n   * The currently selected main thread.\n   */\n  thread: ThreadRuntime;\n\n  /**\n   * The thread manager, to rename, archive and delete threads.\n   */\n  threadList: ThreadListRuntime;\n\n  /**\n   * Switch to a new thread.\n   */\n  switchToNewThread(): void;\n\n  /**\n   * Switch to a thread.\n   *\n   * @param threadId The thread ID to switch to.\n   */\n  switchToThread(threadId: string): void;\n  /**\n   * @deprecated Use `switchToNewThread` instead. This will be removed in 0.6.0.\n   */\n  switchToThread(threadId: string | null): void;\n\n  /**\n   * Register a model config provider. Model config providers are configuration such as system message, temperature, etc. that are set in the frontend.\n   *\n   * @param provider The model config provider to register.\n   */\n  registerModelConfigProvider(provider: ModelConfigProvider): Unsubscribe;\n\n  /**\n   * @deprecated Thread is now static and never gets updated. This will be removed in 0.6.0.\n   */\n  subscribe(callback: () => void): Unsubscribe;\n};\n\nexport class AssistantRuntimeImpl\n  implements\n    Omit<AssistantRuntimeCore, \"thread\" | \"threadList\">,\n    AssistantRuntime\n{\n  public readonly threadList;\n\n  protected constructor(\n    private readonly _core: AssistantRuntimeCore,\n    private readonly _thread: ThreadRuntime,\n  ) {\n    this.threadList = new ThreadListRuntimeImpl(_core.threadList);\n  }\n\n  public get thread() {\n    return this._thread;\n  }\n\n  public switchToNewThread() {\n    return this._core.threadList.switchToNewThread();\n  }\n\n  public switchToThread(threadId: string): void;\n  /**\n   * @deprecated Use `switchToNewThread` instead. This will be removed in 0.6.0.\n   */\n  public switchToThread(threadId: string | null): void;\n  public switchToThread(threadId: string | null) {\n    if (threadId === null) return this.switchToNewThread();\n    return this._core.threadList.switchToThread(threadId);\n  }\n\n  public registerModelConfigProvider(provider: ModelConfigProvider) {\n    return this._core.registerModelConfigProvider(provider);\n  }\n\n  /**\n   * @deprecated Thread is now static and never gets updated. This will be removed in 0.6.0.\n   */\n  public subscribe() {\n    return () => {};\n  }\n\n  protected static createMainThreadRuntime(\n    _core: AssistantRuntimeCore,\n    CustomThreadRuntime: new (\n      binding: ThreadRuntimeCoreBinding,\n    ) => ThreadRuntime = ThreadRuntimeImpl,\n  ) {\n    return new CustomThreadRuntime(\n      new NestedSubscriptionSubject({\n        path: {\n          ref: \"threads.main\",\n          threadSelector: { type: \"main\" },\n        },\n        getState: () => _core.threadList.mainThread,\n        subscribe: (callback) => _core.threadList.subscribe(callback),\n      }),\n    );\n  }\n\n  public static create(\n    _core: AssistantRuntimeCore,\n    CustomThreadRuntime: new (\n      binding: ThreadRuntimeCoreBinding,\n    ) => ThreadRuntime = ThreadRuntimeImpl,\n  ) {\n    return new AssistantRuntimeImpl(\n      _core,\n      AssistantRuntimeImpl.createMainThreadRuntime(_core, CustomThreadRuntime),\n    ) as AssistantRuntime;\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,uCAA0C;AAE1C,2BAIO;AAEP,+BAAyD;AA0ClD,IAAM,uBAAN,MAAM,sBAIb;AAAA,EAGY,YACS,OACA,SACjB;AAFiB;AACA;AAEjB,SAAK,aAAa,IAAI,+CAAsB,MAAM,UAAU;AAAA,EAC9D;AAAA,EAPgB;AAAA,EAShB,IAAW,SAAS;AAClB,WAAO,KAAK;AAAA,EACd;AAAA,EAEO,oBAAoB;AACzB,WAAO,KAAK,MAAM,WAAW,kBAAkB;AAAA,EACjD;AAAA,EAOO,eAAe,UAAyB;AAC7C,QAAI,aAAa,KAAM,QAAO,KAAK,kBAAkB;AACrD,WAAO,KAAK,MAAM,WAAW,eAAe,QAAQ;AAAA,EACtD;AAAA,EAEO,4BAA4B,UAA+B;AAChE,WAAO,KAAK,MAAM,4BAA4B,QAAQ;AAAA,EACxD;AAAA;AAAA;AAAA;AAAA,EAKO,YAAY;AACjB,WAAO,MAAM;AAAA,IAAC;AAAA,EAChB;AAAA,EAEA,OAAiB,wBACf,OACA,sBAEqB,wCACrB;AACA,WAAO,IAAI;AAAA,MACT,IAAI,2DAA0B;AAAA,QAC5B,MAAM;AAAA,UACJ,KAAK;AAAA,UACL,gBAAgB,EAAE,MAAM,OAAO;AAAA,QACjC;AAAA,QACA,UAAU,MAAM,MAAM,WAAW;AAAA,QACjC,WAAW,CAAC,aAAa,MAAM,WAAW,UAAU,QAAQ;AAAA,MAC9D,CAAC;AAAA,IACH;AAAA,EACF;AAAA,EAEA,OAAc,OACZ,OACA,sBAEqB,wCACrB;AACA,WAAO,IAAI;AAAA,MACT;AAAA,MACA,sBAAqB,wBAAwB,OAAO,mBAAmB;AAAA,IACzE;AAAA,EACF;AACF;","names":[]}