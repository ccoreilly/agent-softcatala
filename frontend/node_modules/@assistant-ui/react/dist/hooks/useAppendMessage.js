"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/hooks/useAppendMessage.tsx
var useAppendMessage_exports = {};
__export(useAppendMessage_exports, {
  useAppendMessage: () => useAppendMessage
});
module.exports = __toCommonJS(useAppendMessage_exports);
var import_react = require("react");
var import_ThreadContext = require("../context/react/ThreadContext.cjs");
var useAppendMessage = () => {
  const threadRuntime = (0, import_ThreadContext.useThreadRuntime)();
  const append = (0, import_react.useCallback)(
    (message) => {
      threadRuntime.append(message);
    },
    [threadRuntime]
  );
  return append;
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  useAppendMessage
});
//# sourceMappingURL=useAppendMessage.js.map