import { AppendMessage, ThreadMessage } from "../../types";
import { AttachmentAdapter } from "../attachment";
import { ThreadRuntimeCore } from "../core/ThreadRuntimeCore";
import { BaseComposerRuntimeCore } from "./BaseComposerRuntimeCore";
export declare class DefaultEditComposerRuntimeCore extends BaseComposerRuntimeCore {
    private runtime;
    private endEditCallback;
    get canCancel(): boolean;
    protected getAttachmentAdapter(): AttachmentAdapter | undefined;
    private _nonTextParts;
    private _previousText;
    private _parentId;
    constructor(runtime: Omit<ThreadRuntimeCore, "composer"> & {
        adapters?: {
            attachments?: AttachmentAdapter | undefined;
        } | undefined;
    }, endEditCallback: () => void, { parentId, message }: {
        parentId: string | null;
        message: ThreadMessage;
    });
    handleSend(message: Omit<AppendMessage, "parentId">): Promise<void>;
    cancel(): Promise<void>;
}
//# sourceMappingURL=DefaultEditComposerRuntimeCore.d.ts.map