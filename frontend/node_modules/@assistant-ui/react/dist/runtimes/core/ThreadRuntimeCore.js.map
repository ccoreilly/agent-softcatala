{"version":3,"sources":["../../../src/runtimes/core/ThreadRuntimeCore.tsx"],"sourcesContent":["import { AppendMessage, ModelConfig, ThreadMessage } from \"../../types\";\nimport type { Unsubscribe } from \"../../types/Unsubscribe\";\nimport { SpeechSynthesisAdapter } from \"../speech/SpeechAdapterTypes\";\nimport { ExportedMessageRepository } from \"../utils/MessageRepository\";\nimport {\n  ComposerRuntimeCore,\n  ThreadComposerRuntimeCore,\n} from \"./ComposerRuntimeCore\";\n\nexport type RuntimeCapabilities = Readonly<{\n  switchToBranch: boolean;\n  edit: boolean;\n  reload: boolean;\n  cancel: boolean;\n  unstable_copy: boolean;\n  speech: boolean;\n  attachments: boolean;\n  feedback: boolean;\n}>;\n\nexport type AddToolResultOptions = {\n  messageId: string;\n  toolName: string;\n  toolCallId: string;\n  result: any;\n};\n\nexport type SubmitFeedbackOptions = {\n  messageId: string;\n  type: \"negative\" | \"positive\";\n};\n\nexport type ThreadSuggestion = {\n  prompt: string;\n};\n\nexport type SpeechState = Readonly<{\n  messageId: string;\n  status: SpeechSynthesisAdapter.Status;\n}>;\n\nexport type SubmittedFeedback = Readonly<{\n  type: \"negative\" | \"positive\";\n}>;\n\nexport type ThreadRuntimeEventType =\n  | \"switched-to\"\n  | \"switched-away\"\n  | \"run-start\"\n  | \"model-config-update\";\n\nexport type ThreadRuntimeCore = Readonly<{\n  getMessageById: (messageId: string) =>\n    | {\n        parentId: string | null;\n        message: ThreadMessage;\n      }\n    | undefined;\n\n  getBranches: (messageId: string) => readonly string[];\n  switchToBranch: (branchId: string) => void;\n\n  append: (message: AppendMessage) => void;\n  startRun: (parentId: string | null) => void;\n  cancelRun: () => void;\n\n  addToolResult: (options: AddToolResultOptions) => void;\n\n  speak: (messageId: string) => void;\n  stopSpeaking: () => void;\n\n  getSubmittedFeedback: (messageId: string) => SubmittedFeedback | undefined;\n  submitFeedback: (feedback: SubmitFeedbackOptions) => void;\n\n  getModelConfig: () => ModelConfig;\n\n  composer: ThreadComposerRuntimeCore;\n  getEditComposer: (messageId: string) => ComposerRuntimeCore | undefined;\n  beginEdit: (messageId: string) => void;\n\n  speech: SpeechState | undefined;\n\n  capabilities: Readonly<RuntimeCapabilities>;\n  threadId: string;\n  isDisabled: boolean;\n  messages: readonly ThreadMessage[];\n  suggestions: readonly ThreadSuggestion[];\n  extras: unknown;\n\n  subscribe: (callback: () => void) => Unsubscribe;\n\n  import(repository: ExportedMessageRepository): void;\n  export(): ExportedMessageRepository;\n\n  unstable_on(event: ThreadRuntimeEventType, callback: () => void): Unsubscribe;\n}>;\n"],"mappings":";;;;;;;;;;;;;;;;AAAA;AAAA;","names":[]}