"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/runtimes/external-store/ExternalStoreRuntimeCore.tsx
var ExternalStoreRuntimeCore_exports = {};
__export(ExternalStoreRuntimeCore_exports, {
  ExternalStoreRuntimeCore: () => ExternalStoreRuntimeCore
});
module.exports = __toCommonJS(ExternalStoreRuntimeCore_exports);
var import_internal = require("../../internal.cjs");
var import_ExternalStoreThreadListRuntimeCore = require("./ExternalStoreThreadListRuntimeCore.cjs");
var import_ExternalStoreThreadRuntimeCore = require("./ExternalStoreThreadRuntimeCore.cjs");
var getThreadListAdapter = (store) => {
  return {
    threadId: store.threadId,
    onSwitchToNewThread: store.onSwitchToNewThread,
    onSwitchToThread: store.onSwitchToThread,
    ...store.adapters?.threadList
  };
};
var ExternalStoreRuntimeCore = class extends import_internal.BaseAssistantRuntimeCore {
  threadList;
  _store;
  constructor(store) {
    super();
    this._store = store;
    this.threadList = new import_ExternalStoreThreadListRuntimeCore.ExternalStoreThreadListRuntimeCore(
      getThreadListAdapter(store),
      (threadId) => new import_ExternalStoreThreadRuntimeCore.ExternalStoreThreadRuntimeCore(
        this._proxyConfigProvider,
        threadId,
        this._store
      )
    );
  }
  setStore(store) {
    this._store = store;
    this.threadList.setAdapter(getThreadListAdapter(store));
    this.threadList.mainThread.setStore(store);
  }
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  ExternalStoreRuntimeCore
});
//# sourceMappingURL=ExternalStoreRuntimeCore.js.map