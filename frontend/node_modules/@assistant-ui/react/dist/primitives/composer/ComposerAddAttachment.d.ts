import { ActionButtonElement, ActionButtonProps } from "../../utils/createActionButton";
import { useComposerAddAttachment } from "../../primitive-hooks/composer";
/**
 * @deprecated Use `ComposerPrimitive.AddAttachment.Props` instead. This will be removed in 0.6.
 */
export type ComposerPrimitiveAddAttachmentProps = ComposerPrimitiveAddAttachment.Props;
export declare namespace ComposerPrimitiveAddAttachment {
    type Element = ActionButtonElement;
    type Props = ActionButtonProps<typeof useComposerAddAttachment>;
}
export declare const ComposerPrimitiveAddAttachment: import("react").ForwardRefExoticComponent<Omit<Omit<import("react").DetailedHTMLProps<import("react").ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>, "ref"> & {
    ref?: ((instance: HTMLButtonElement | null) => void | import("react").DO_NOT_USE_OR_YOU_WILL_BE_FIRED_CALLBACK_REF_RETURN_VALUES[keyof import("react").DO_NOT_USE_OR_YOU_WILL_BE_FIRED_CALLBACK_REF_RETURN_VALUES]) | import("react").RefObject<HTMLButtonElement> | null | undefined;
} & {
    asChild?: boolean;
}, "ref"> & import("react").RefAttributes<HTMLButtonElement>>;
//# sourceMappingURL=ComposerAddAttachment.d.ts.map