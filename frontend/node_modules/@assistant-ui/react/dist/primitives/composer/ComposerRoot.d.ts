import { Primitive } from "@radix-ui/react-primitive";
import { type ElementRef, ComponentPropsWithoutRef } from "react";
export type ComposerPrimitiveRootProps = ComposerPrimitiveRoot.Props;
export declare namespace ComposerPrimitiveRoot {
    type Element = ElementRef<typeof Primitive.form>;
    type Props = ComponentPropsWithoutRef<typeof Primitive.form>;
}
export declare const ComposerPrimitiveRoot: import("react").ForwardRefExoticComponent<Omit<Omit<import("react").DetailedHTMLProps<import("react").FormHTMLAttributes<HTMLFormElement>, HTMLFormElement>, "ref"> & {
    ref?: ((instance: HTMLFormElement | null) => void | import("react").DO_NOT_USE_OR_YOU_WILL_BE_FIRED_CALLBACK_REF_RETURN_VALUES[keyof import("react").DO_NOT_USE_OR_YOU_WILL_BE_FIRED_CALLBACK_REF_RETURN_VALUES]) | import("react").RefObject<HTMLFormElement> | null | undefined;
} & {
    asChild?: boolean;
}, "ref"> & import("react").RefAttributes<HTMLFormElement>>;
//# sourceMappingURL=ComposerRoot.d.ts.map